{"remainingRequest":"/Users/alex/Projects/use-events/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/alex/Projects/use-events/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"/Users/alex/Projects/use-events/node_modules/docz-core/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/alex/Projects/use-events/src/useResizeObserver/index.tsx","dependencies":[{"path":"/Users/alex/Projects/use-events/src/useResizeObserver/index.tsx","mtime":1552357220322},{"path":"/Users/alex/Projects/use-events/node_modules/cache-loader/dist/cjs.js","mtime":1549050405500},{"path":"/Users/alex/Projects/use-events/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1548880828159}],"contextDependencies":[],"result":["function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}function _iterableToArrayLimit(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"]!=null)_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}import React from'react';import ResizeObserver from'resize-observer-polyfill';var useResizeObserver=function useResizeObserver(ref){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),width=_React$useState2[0],setWidth=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),height=_React$useState4[0],setHeight=_React$useState4[1];React.useLayoutEffect(function(){var current=ref.current;var resizeObserver=new ResizeObserver(function(entries){var _entries$0$contentRec=entries[0].contentRect,width=_entries$0$contentRec.width,height=_entries$0$contentRec.height;setWidth(width);setHeight(height);});if(current!==null){resizeObserver.observe(current);}return function(){resizeObserver.disconnect();};},[ref]);return[width,height];};export default useResizeObserver;",{"version":3,"sources":["/Users/alex/Projects/use-events/src/useResizeObserver/index.tsx"],"names":["React","ResizeObserver","useResizeObserver","ref","useState","width","setWidth","height","setHeight","useLayoutEffect","current","resizeObserver","entries","contentRect","observe","disconnect"],"mappings":"ymBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,0BAA3B,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CACxBC,GADwB,CAEH,qBACKH,KAAK,CAACI,QAAN,CAAe,CAAf,CADL,oDACdC,KADc,qBACPC,QADO,0CAEON,KAAK,CAACI,QAAN,CAAe,CAAf,CAFP,qDAEdG,MAFc,qBAENC,SAFM,qBAIrBR,KAAK,CAACS,eAAN,CAAsB,UAAM,IAClBC,CAAAA,OADkB,CACNP,GADM,CAClBO,OADkB,CAG1B,GAAMC,CAAAA,cAAc,CAAG,GAAIV,CAAAA,cAAJ,CAAmB,SAAAW,OAAO,CAAI,2BACzBA,OAAO,CAAC,CAAD,CAAP,CAAWC,WADc,CAC3CR,KAD2C,uBAC3CA,KAD2C,CACpCE,MADoC,uBACpCA,MADoC,CAGnDD,QAAQ,CAACD,KAAD,CAAR,CACAG,SAAS,CAACD,MAAD,CAAT,CACD,CALsB,CAAvB,CAOA,GAAIG,OAAO,GAAK,IAAhB,CAAsB,CACpBC,cAAc,CAACG,OAAf,CAAuBJ,OAAvB,EACD,CAED,MAAO,WAAM,CACXC,cAAc,CAACI,UAAf,GACD,CAFD,CAGD,CAjBD,CAiBG,CAACZ,GAAD,CAjBH,EAmBA,MAAO,CAACE,KAAD,CAAQE,MAAR,CAAP,CACD,CA1BD,CA4BA,cAAeL,CAAAA,iBAAf","sourcesContent":["import React from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nconst useResizeObserver = (\n  ref: React.RefObject<HTMLElement>\n): [number, number] => {\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n\n  React.useLayoutEffect(() => {\n    const { current } = ref;\n\n    const resizeObserver = new ResizeObserver(entries => {\n      const { width, height } = entries[0].contentRect;\n\n      setWidth(width);\n      setHeight(height);\n    });\n\n    if (current !== null) {\n      resizeObserver.observe(current);\n    }\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [ref]);\n\n  return [width, height];\n};\n\nexport default useResizeObserver;\n"]}]}